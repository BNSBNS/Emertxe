{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf460
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\fswiss\fcharset0 Helvetica-Light;
\f3\fnil\fcharset0 HelveticaNeue-Light;\f4\fnil\fcharset0 LucidaGrande;\f5\fmodern\fcharset0 Courier;
\f6\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red37\green36\blue35;\red38\green38\blue38;\red247\green249\blue250;
\red26\green26\blue26;\red242\green244\blue245;\red27\green29\blue31;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww20600\viewh17400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs48 \cf0 1.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1 \cf0 \CocoaLigature0 #
\f2\fs32 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 To get replicates with arbiter : 3 members: 1Primary, 1 Secondary, 1Arbiter
\f3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\ls1\ilvl0
\f1\fs48 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 # rs.status() \'97> state 
\f3\fs40 \cf3 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\ls1\ilvl0
\f1\fs48 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 #
\f2\fs32 \cf2 \CocoaLigature1 	
\f4 \uc0\u9702 
\f2 	\cf3 \cb4 \expnd0\expndtw0\kerning0
0 = Starting up (phase 1)
\f3 \cf2 \cb1 \kerning1\expnd0\expndtw0 \
\ls1\ilvl0
\f1\fs48 \cf0 \CocoaLigature0 #
\f3\fs32 \cf2 \CocoaLigature1 	
\f4 \uc0\u9702 
\f2 	\cf3 \cb4 \expnd0\expndtw0\kerning0
1 = Primary
\f3 \cf2 \cb1 \kerning1\expnd0\expndtw0 \
\ls1\ilvl0
\f1\fs48 \cf0 \CocoaLigature0 #
\f3\fs32 \cf2 \CocoaLigature1 	
\f4 \uc0\u9702 
\f3 	
\f2 \cf3 \cb4 \expnd0\expndtw0\kerning0
2 = Secondary
\f3\fs40 \cf3 \cb1 \
\ls1\ilvl0
\f1\fs48 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 #
\f3\fs32 \cf2 \CocoaLigature1 	
\f4 \uc0\u9702 
\f3 	
\f2 \cf3 \cb4 \expnd0\expndtw0\kerning0
3 = Recovering
\f3\fs40 \cf3 \cb1 \
\ls1\ilvl0
\f1\fs48 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 #
\f3\fs32 \cf2 \CocoaLigature1 	
\f4 \uc0\u9702 
\f3 	
\f2 \cf3 \cb4 \expnd0\expndtw0\kerning0
4 = Fatal error
\f3\fs40 \cf3 \cb1 \
\ls1\ilvl0
\f1\fs48 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 #
\f3\fs32 \cf2 \CocoaLigature1 	
\f4 \uc0\u9702 
\f3 	
\f2 \cf3 \cb4 \expnd0\expndtw0\kerning0
5 = Starting up (phase 2)
\f3\fs40 \cf3 \cb1 \
\ls1\ilvl0
\f1\fs48 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 #
\f3\fs32 \cf2 \CocoaLigature1 	
\f4 \uc0\u9702 
\f3 	
\f2 \cf3 \cb4 \expnd0\expndtw0\kerning0
6 = Unknown state
\f3\fs40 \cf3 \cb1 \
\ls1\ilvl0
\f1\fs48 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 #
\f3\fs32 \cf2 \CocoaLigature1 	
\f4 \uc0\u9702 
\f3 	
\f2 \cf3 \cb4 \expnd0\expndtw0\kerning0
7 = Arbiter
\f3\fs40 \cf3 \cb1 \
\ls1\ilvl0
\f1\fs48 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 #
\f3\fs32 \cf2 \CocoaLigature1 	
\f4 \uc0\u9702 
\f3 	
\f2 \cf3 \cb4 \expnd0\expndtw0\kerning0
8 = Down
\f3\fs40 \cf3 \cb1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs32 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs48 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 nandithasmurthy$ cd Desktop/Emertxe/mongodb/M102/chapter_5_replication/nandithasmurthy$ ls\
Week5_HW.rtf\
nandithasmurthy$ mkdir 1 2 arb\
nandithasmurthy$ ls\
1		arb\
2		Week5_HW.rtf\
nandithasmurthy$ mongod --port 27001 --replSet h5rs --dbpath 1 --logpath log.1 --logappend --oplogSize 50 --smallfiles --fork\
about to fork child process, waiting until server is ready for connections.\
forked process: 1273\
child process started successfully, parent exiting\
nandithasmurthy$ mongod --port 27002 --replSet h5rs --dbpath 2 --logpath log.2 --logappend --oplogSize 50 --smallfiles --fork\
about to fork child process, waiting until server is ready for connections.\
forked process: 1276\
child process started successfully, parent exiting\
nandithasmurthy$ mongod --port 27003 --replSet h5rs --dbpath arb --logpath log.arb --logappend --oplogSize 50 --smallfiles --fork\
about to fork child process, waiting until server is ready for connections.\
forked process: 1280\
child process started successfully, parent exiting\

\f5\fs28 \cf5 \cb6 \expnd0\expndtw0\kerning0
\CocoaLigature1 \

\f1\fs48 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 #
\f2\fs32 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 Open shell for primary
\f3 \

\f1\fs48 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 nandithasmurthy$ mongo --port 27001 \
MongoDB shell version: 3.2.8\
connecting to: 127.0.0.1:27001/test\
> rs.initiate()\
\{\
	"info2" : "no configuration specified. Using a default configuration for the set",\
	"me" : "Nandithas-iMac.local:27001",\
	"ok" : 1\
\}\
h5rs:SECONDARY> rs.status()\
\{\
	"set" : "h5rs",\
	"date" : ISODate("2016-11-13T07:13:41.747Z"),\
	"myState" : 1,\
	"term" : NumberLong(1),\
	"heartbeatIntervalMillis" : NumberLong(2000),\
	"members" : [\
		\{\
			"_id" : 0,\
			"name" : "Nandithas-iMac.local:27001",\
			"health" : 1,\
			"state" : 1,\
			"stateStr" : "PRIMARY",\
			"uptime" : 331,\
			"optime" : \{\
				"ts" : Timestamp(1479021202, 2),\
				"t" : NumberLong(1)\
			\},\
			"optimeDate" : ISODate("2016-11-13T07:13:22Z"),\
			"infoMessage" : "could not find member to sync from",\
			"electionTime" : Timestamp(1479021202, 1),\
			"electionDate" : ISODate("2016-11-13T07:13:22Z"),\
			"configVersion" : 1,\
			"self" : true\
		\}\
	],\
	"ok" : 1\
\}\
h5rs:PRIMARY> rs.add("Nandithas-iMac.local:27002")\
\{ "ok" : 1 \}\
h5rs:PRIMARY> rs.status()\
\{\
	"set" : "h5rs",\
	"date" : ISODate("2016-11-13T07:14:51.689Z"),\
	"myState" : 1,\
	"term" : NumberLong(1),\
	"heartbeatIntervalMillis" : NumberLong(2000),\
	"members" : [\
		\{\
			"_id" : 0,\
			"name" : "Nandithas-iMac.local:27001",\
			"health" : 1,\
			"state" : 1,\
			"stateStr" : "PRIMARY",\
			"uptime" : 401,\
			"optime" : \{\
				"ts" : Timestamp(1479021272, 1),\
				"t" : NumberLong(1)\
			\},\
			"optimeDate" : ISODate("2016-11-13T07:14:32Z"),\
			"infoMessage" : "could not find member to sync from",\
			"electionTime" : Timestamp(1479021202, 1),\
			"electionDate" : ISODate("2016-11-13T07:13:22Z"),\
			"configVersion" : 2,\
			"self" : true\
		\},\
		\{\
			"_id" : 1,\
			"name" : "Nandithas-iMac.local:27002",\
			"health" : 1,\
			"state" : 2,\
			"stateStr" : "SECONDARY",\
			"uptime" : 19,\
			"optime" : \{\
				"ts" : Timestamp(1479021272, 1),\
				"t" : NumberLong(1)\
			\},\
			"optimeDate" : ISODate("2016-11-13T07:14:32Z"),\
			"lastHeartbeat" : ISODate("2016-11-13T07:14:50.646Z"),\
			"lastHeartbeatRecv" : ISODate("2016-11-13T07:14:47.466Z"),\
			"pingMs" : NumberLong(0),\
			"configVersion" : 2\
		\}\
	],\
	"ok" : 1\
\}\
h5rs:PRIMARY> \
h5rs:PRIMARY> rs.addArb("Nandithas-iMac.local:27003")\
\{ "ok" : 1 \}\
h5rs:PRIMARY> rs.status()\
\{\
	"set" : "h5rs",\
	"date" : ISODate("2016-11-13T07:15:33.776Z"),\
	"myState" : 1,\
	"term" : NumberLong(1),\
	"heartbeatIntervalMillis" : NumberLong(2000),\
	"members" : [\
		\{\
			"_id" : 0,\
			"name" : "Nandithas-iMac.local:27001",\
			"health" : 1,\
			"state" : 1,\
			"stateStr" : "PRIMARY",\
			"uptime" : 443,\
			"optime" : \{\
				"ts" : Timestamp(1479021324, 1),\
				"t" : NumberLong(1)\
			\},\
			"optimeDate" : ISODate("2016-11-13T07:15:24Z"),\
			"electionTime" : Timestamp(1479021202, 1),\
			"electionDate" : ISODate("2016-11-13T07:13:22Z"),\
			"configVersion" : 3,\
			"self" : true\
		\},\
		\{\
			"_id" : 1,\
			"name" : "Nandithas-iMac.local:27002",\
			"health" : 1,\
			"state" : 2,\
			"stateStr" : "SECONDARY",\
			"uptime" : 61,\
			"optime" : \{\
				"ts" : Timestamp(1479021324, 1),\
				"t" : NumberLong(1)\
			\},\
			"optimeDate" : ISODate("2016-11-13T07:15:24Z"),\
			"lastHeartbeat" : ISODate("2016-11-13T07:15:32.772Z"),\
			"lastHeartbeatRecv" : ISODate("2016-11-13T07:15:33.768Z"),\
			"pingMs" : NumberLong(0),\
			"syncingTo" : "Nandithas-iMac.local:27001",\
			"configVersion" : 3\
		\},\
		\{\
			"_id" : 2,\
			"name" : "Nandithas-iMac.local:27003",\
			"health" : 1,\
			"state" : 7,\
			"stateStr" : "ARBITER",\
			"uptime" : 9,\
			"lastHeartbeat" : ISODate("2016-11-13T07:15:32.772Z"),\
			"lastHeartbeatRecv" : ISODate("2016-11-13T07:15:30.597Z"),\
			"pingMs" : NumberLong(0),\
			"configVersion" : 3\
		\}\
	],\
	"ok" : 1\
\}\
h5rs:PRIMARY> \
\
2.\
# 
\f2\fs32 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 You have a single replica set with two members and 
\f3 \cf2 used a readPreference of "primaryPreferred" i.e, the application can read from the one remaining server during server maintenance with 
\f2 \cf2 a total of two copies of your data is being sufficient. \

\f3 \cf2 To ensures that the data will be durable in the face of the failure of either server, to ensure availability of writes during server maintenance and to ensure that all writes can be replicated during server maintenan
\f2 \cf2 ce. \cf7  	
\f0 Add an arbiter [RF 2]
\f2 \
	
\f0\b Add two data bearing members plus one arbiter 
\b0 [RF: 4]
\f2 \
	Increase the priority of the first server from one to two 
\f0 [RF 2]
\f2 \
	
\f0\b Add another data bearing node 
\b0 [RF 3]
\f2 \
	Add two arbiters 
\f0 [RF 2]
\f2 \
	\cf2 \
\pard\pardeftab720\sl480\partightenfactor0
\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs48 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 3.\
# 
\f3\fs32 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 create a replica set that is robust to data center failure. Two data centers are available.\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 Arrangement(s) of servers that will allow to be stay up (as in, still be able to elect a primary) in the event of a failure of either data center (but not both at once):\
	All 3 servers in data center 1\
	2 servers in data centre, one server in data centre 2\
	
\f6\b None of the above
\f3\b0 \

\f1\fs48 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
4.\
# 
\f3\fs32 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 You have a two member replica set, a primary, and a secondary. The data center with the primary goes down, and is expected to remain down for the foreseeable future. Your secondary is now the only copy of your data, and it is not accepting writes. You want to reconfigure your replica set config to exclude the primary, and allow your secondary to be elected, but you run into trouble. The optional parameter that you'll need for rs.reconfig() would be:\
	
\f6\b \{ force : true \}\

\f1\b0\fs48 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f5\fs28 \cf5 \cb6 \expnd0\expndtw0\kerning0
\CocoaLigature1  \

\f1\fs48 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
}