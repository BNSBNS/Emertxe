#include <stdio.h>
#include <stdlib.h>
#include "ntype_lib.c"


#define ARR_ROW 4
#define ARR_COL 10000

static int elementCount = 0;

struct displayData
{
    char *baseAddress;
    char *dataType;
};

void add_Element(char (* typeOfData)[], void *ptr, void *ptr2, int size);

int main()
{
    int choice, typechoice, count;
    ;
    char option;
    
    static void * pointerTodataTypeValue;
    void * endValuepointerTodataTypeValue;
    
    int num;
    char character;
    float fnum;
    double dnum;
    char * pointerIndex[8];
    
    char * const ptr = (char *) malloc(8 * sizeof(char));
    
    if (NULL == ptr)
    {
        printf("Error: Memory allocation failed\n");
        return 1;
    }
    pointerTodataTypeValue = (char *)ptr;
    endValuepointerTodataTypeValue = (char *)(ptr+sizeof(pointerTodataTypeValue)-1);
    //printf("Initially pointer address --> %p \n",pointerTodataTypeValue);
    
    do
    {
        
    
   
    char mainMenu[ARR_ROW][ARR_COL] = { "Add element", "Remove element", "Display element", "Exit from the program" };
    
    char typeMenu[ARR_ROW][ARR_COL] = { "int", "char", "float", "double" };
    
    print_Menu(mainMenu, ARR_ROW);
    printf("Choice ---> ");
    scanf("%d", &choice);
   
        printf("Continue(y/n): ");
        scanf("\n%s",&option);
        
        if (option == 'y')
        {
            continue;
        }
        else
        {
            break;
        }
        
    } while (1);
    
    return 0;
}

void add_Element(char (* typeOfData)[], void *ptr, void *ptr2, int size)
{
    int i;
    char *a = ptr;
    char *b = ptr2;
    
    elementCount++;
    
    printf("element %d Entering the %s : \n", elementCount, *(typeOfData));
    for (i = 0; i < size; i++)
    {
        b[i] = a[i];
    }
   
}
